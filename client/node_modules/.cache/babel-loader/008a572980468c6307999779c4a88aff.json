{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/MAMP/htdocs/react-redux/streams/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/MAMP/htdocs/react-redux/streams/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM } from \"./types\";\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post(\"/streams\", formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-redux/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response","data"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,QAAiD,SAAjD;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AAC9B,SAAO;AAAEC,IAAAA,IAAI,EAAEL,OAAR;AAAiBM,IAAAA,OAAO,EAAEF;AAA1B,GAAP;AACD,CAFM;AAGP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO;AAAEF,IAAAA,IAAI,EAAEJ;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACjBX,OAAO,CAACY,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADiB;;AAAA;AAClCG,gBAAAA,QADkC;AAGxCF,gBAAAA,QAAQ,CAAC;AAAEL,kBAAAA,IAAI,EAAEH,aAAR;AAAuBI,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAzC,iBAAD,CAAR;;AAHwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B","sourcesContent":["import streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM } from \"./types\";\n\nexport const signIn = userId => {\n  return { type: SIGN_IN, payload: userId };\n};\nexport const signOut = () => {\n  return { type: SIGN_OUT };\n};\n\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}